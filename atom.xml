<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yudistrange.github.io/"/>
  <updated>2021-08-29T12:31:45.751Z</updated>
  <id>http://yudistrange.github.io/</id>
  
  <author>
    <name>udit</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python setup with asdf</title>
    <link href="http://yudistrange.github.io/2021/08/27/python-with-asdf/"/>
    <id>http://yudistrange.github.io/2021/08/27/python-with-asdf/</id>
    <published>2021-08-27T11:56:47.000Z</published>
    <updated>2021-08-29T12:31:45.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="on-asdf"><a href="#on-asdf" class="headerlink" title="on asdf"></a>on asdf</h3><p>I first discovered the <a href="https://asdf-vm.com/" target="_blank" rel="noopener">asdf</a> tool when I was trying to manage different version of Elixir language on my machine. Later I discovered that I can use the same tool for managing versions of other languages (and tools!) using asdf plugins.</p><h3 id="on-python-setup"><a href="#on-python-setup" class="headerlink" title="on python setup"></a>on python setup</h3><p>Setting up python locally is easy.</p><p>Setting up python multiple projects, each using a different version of python, along with their possibly conflicting dependencies is complicated. There are various tools like <a href="https://docs.conda.io/en/latest/" target="_blank" rel="noopener">conda</a>, <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener">pyenv</a>, <a href="https://virtualenv.pypa.io/en/latest/" target="_blank" rel="noopener">virtualenv</a> which tackle different (or overlapping) sub-sets of this problem.</p><p>I found the combination of pyenv (to manage different versions of python) + virtualenv (to separate out the dependencies of projects) the most tenable. Then I discovered that asdf can be a drop in replacement for pyenv. I also use <a href="https://virtualfish.readthedocs.io/en/latest/" target="_blank" rel="noopener">virtualfish</a>, the fish shell wrapper over virtualenv</p><p>Please install asdf’s <a href="https://github.com/danhper/asdf-python.git" target="_blank" rel="noopener">python-plugin</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install python version</span></span><br><span class="line">asdf install python &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set python version to be used globally</span></span><br><span class="line">asdf global python 3.9.5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Set python version to be used <span class="keyword">in</span> the current folder</span></span><br><span class="line">asdf local python 3.7.11</span><br></pre></td></tr></table></figure><p>Once the requisite python version installed, a virtual environment can be created as follows</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vf new -p python3.7.11 my-virtual-env</span><br></pre></td></tr></table></figure><p><em>Please note</em>: If the python version is not specified virtualfish always takes up the global version irrespective of the currently set local python version. This maybe a bug in my configuration.</p><h3 id="on-setting-python-for-homebrew"><a href="#on-setting-python-for-homebrew" class="headerlink" title="on setting python for homebrew"></a>on setting python for homebrew</h3><p><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> likes to install and manage its own version of python. It will often get installed as a transitive dependency of some tool (pgcli in my case). It bugged me that I had 2 very similar versions of python (3.9.5 vs 3.9.6 iirc) installed on the system, one maintained by brew the other by asdf. Luckily I found a <a href="https://towardsdatascience.com/homebrew-and-pyenv-python-playing-pleasantly-in-partnership-3a342d86319b" target="_blank" rel="noopener">post</a> that lists how to use a pyenv installed python version with homebrew. I did the same, et voila homebrew now uses the python version maintained by asdf.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s ~/.asdf/installs/python/3.9.6 $(brew --cellar python)/3.9.6</span><br></pre></td></tr></table></figure><p><em>Please note</em>: If there’s no python version managed by brew, then we may need to create the directory</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir $(brew --cellar python)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;on-asdf&quot;&gt;&lt;a href=&quot;#on-asdf&quot; class=&quot;headerlink&quot; title=&quot;on asdf&quot;&gt;&lt;/a&gt;on asdf&lt;/h3&gt;&lt;p&gt;I first discovered the &lt;a href=&quot;https://asdf-vm.co
      
    
    </summary>
    
    
    
      <category term="tech" scheme="http://yudistrange.github.io/tags/tech/"/>
    
      <category term="python" scheme="http://yudistrange.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>reading list</title>
    <link href="http://yudistrange.github.io/2020/07/21/reading-list/"/>
    <id>http://yudistrange.github.io/2020/07/21/reading-list/</id>
    <published>2020-07-20T18:30:00.000Z</published>
    <updated>2021-03-03T06:11:34.562Z</updated>
    
    <content type="html"><![CDATA[<p>I have been sitting on a pile of technical books that I would like to read. But I haven’t been able to do it with conviction. I keep getting distracted by something or the other.</p><p>So I thought maybe I will put the list in the public domain, just to put some pressure on myself. The goal is to finish these cover to cover before the year ends. Here goes it:</p><ul><li><input checked="" disabled="" type="checkbox"> Practical Object Oriented design in Ruby</li><li><input disabled="" type="checkbox"> TDD by example</li><li><input disabled="" type="checkbox"> User stories applied</li><li><input disabled="" type="checkbox"> Software Architecture</li><li><input disabled="" type="checkbox"> Designing for Scalability with Erlang</li><li><input disabled="" type="checkbox"> Reactive Design Patterns</li><li><input disabled="" type="checkbox"> Database Internals</li><li><input disabled="" type="checkbox"> Designing Data-Intensive Applications</li></ul><h4 id="Update-2020-03-03"><a href="#Update-2020-03-03" class="headerlink" title="Update 2020-03-03"></a>Update 2020-03-03</h4><p>Failed miserably with this. Started a lot of these, but only finished POODR completely. Need to get better at this.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I have been sitting on a pile of technical books that I would like to read. But I haven’t been able to do it with conviction. I keep gett
      
    
    </summary>
    
    
    
      <category term="personal" scheme="http://yudistrange.github.io/tags/personal/"/>
    
      <category term="tech" scheme="http://yudistrange.github.io/tags/tech/"/>
    
      <category term="books" scheme="http://yudistrange.github.io/tags/books/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://yudistrange.github.io/2020/01/25/hello-world/"/>
    <id>http://yudistrange.github.io/2020/01/25/hello-world/</id>
    <published>2020-01-24T18:30:00.000Z</published>
    <updated>2020-07-21T06:18:50.796Z</updated>
    
    <content type="html"><![CDATA[<p>everyone starts somewhere.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;everyone starts somewhere.&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="personal" scheme="http://yudistrange.github.io/tags/personal/"/>
    
  </entry>
  
</feed>
